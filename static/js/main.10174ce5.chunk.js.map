{"version":3,"sources":["Public/apiManager.js","Component/LinkComponent.js","IconFont/IconFontModal.js","IconFont/IconFont.js","Tools/Tools.js","Component/PageComponent.js","views/App.js","serviceWorker.js","index.js"],"names":["window","__config","host","LinkComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","linkPath","_this2","reqwest","url","success","res","setState","react_default","a","createElement","rel","type","href","Component","TextArea","Input","IconFontModal","visible","confirmLoading","showModal","console","log","handleOk","e","setTimeout","data","form","validateFields","err","values","currentIconFont","objectId","method","contentType","message","info","refreshFunction","error","handleCancel","iconChange","value","target","icon","_this$props","allThemes","title","getFieldDecorator","iconDiv","class","Component_LinkComponent","onClick","modal","onOk","onCancel","destroyOnClose","es_form","Item","label","hasFeedback","rules","require","initialValue","hasOwnProperty","input","prefix","placeholder","onChange","name","map","item","color","required","size","description","rows","React","Form","create","IconFontView","colums","dataIndex","key","render","text","className","record","src_IconFont_IconFontModal","refresh","bind","assertThisInitialized","divider","popconfirm","onConfirm","onClickRemove","onClickRemoveCancel","okText","cancelText","initLoading","loading","list","mentionLoading","suggestions","getColums","callBack","getData","fetchSuggestions","callback","onSearchChange","index","push","dic","tag","toUpperCase","newList","slice","_this3","event","_this4","theme","copy","JSON","stringify","_this$state","that","menu","es_menu","onClickToClipBoard","mention","style","width","dropdown","overlay","es_icon","table","Table","rowKey","columns","dataSource","withRouter","action","header","DevelopView","handleSubmit","requestSearch","items","layout","es_button","upload","Header","Layout","Content","Sider","Menu","SubMenu","Iconfont","IconFont_IconFont","DevelopTool","Tools","PageComponent","collapsed","number","toggle","LeftSider","_ref","history","trigger","collapsible","selectedKeys","location","pathname","mode","react_router_dom","to","minHeight","background","padding","margin","react_router","exact","path","component","App","src_Component_PageComponent","Boolean","hostname","match","ReactDOM","src_views_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10174ce5.chunk.js","sourcesContent":["\n\n\n\nwindow.__config = {\n    host : 1 ? 'https://xmi-iconfont.leanapp.cn/' : 'http://localhost:5000',\n}","import React , { Component } from 'react';\nimport reqwest from 'reqwest';\n\nconst host = window.__config.host;\n\nclass LinkComponent extends Component{\n\n    state = {\n        linkPath : \"https://at.alicdn.com/t/font_1143475_6rlql94fxp6.css\",\n    }\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        reqwest({\n            url: host + '/api/getIconfontCSS',\n            success: (res) => {\n                this.setState({\n                    linkPath: res,\n                })\n            }\n        });\n    }\n\n\n    render() {\n\n        const { linkPath } = this.state;\n\n        return (\n            <link rel=\"stylesheet\" type=\"text/css\" href={linkPath} />\n        )\n    }\n\n}\n\nexport default LinkComponent;","import React from 'react';\nimport { Modal , Input , Form , Button , message} from 'antd'\nimport reqwest from 'reqwest';\nimport \"./IconFontModal.css\";\nimport \"../Public/apiManager.js\"\nimport LinkComponent  from \"../Component/LinkComponent.js\"\n\nconst host = window.__config.host;\n\nconst { TextArea } = Input;\n\nclass IconFontModal extends React.Component {\n\n    state = {\n        visible : false,\n        confirmLoading : false,\n    }\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount() {\n        this.props.form.validateFields();\n        this.setState({\n            icon : this.props.currentIconFont && this.props.currentIconFont.icon ? this.props.currentIconFont.icon : \"\",\n        });\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n        console.log(this.props);\n    }\n\n    handleOk = (e) => {\n        this.setState({\n            confirmLoading : true,\n        });\n\n        setTimeout(()=>{\n            var data = {};\n            this.props.form.validateFields((err , values) => {\n                data = values;\n            });\n\n            if (this.props.currentIconFont){\n                data['objectId'] = this.props.currentIconFont.objectId;\n            }\n\n            reqwest({\n                url: host + '/api/indexs/editIconFont',\n                type: 'json',\n                method: 'get',\n                contentType: 'application/json',\n                data:data,\n                success: (res)=>{\n                    message.info(\"修改成功\");\n                    this.props.refreshFunction();\n                    this.setState({\n                        visible: false,\n                        confirmLoading: false,\n                    });\n                },\n                error: (err) => {\n                    message.error(\"修改失败\");\n                    this.setState({\n                        visible: false,\n                        confirmLoading: false,\n                    });\n                }\n            });\n        },2000);\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            visible: false,\n        })\n    }\n\n    iconChange =(e) => {\n        const { value } = e.target;\n        this.setState({\n            icon : value,\n        })\n    }\n\n\n\n    render() {\n\n        const { allThemes , currentIconFont , title } = this.props;\n        const { getFieldDecorator  } = this.props.form;\n        const { icon } = this.state;\n        const formItemLayout = {\n\n        };\n\n        var iconDiv = (\n            <i class={\"iconfont \"+ icon}></i>\n        );\n\n        return (\n            <span>\n                <LinkComponent />\n                <a onClick={this.showModal}>\n                    {title}\n                </a>\n                <Modal\n                     title = \"这是一个iconfont\"\n                    visible={this.state.visible}\n                    onOk = {this.handleOk}\n                    onCancel={this.handleCancel}\n                     confirmLoading={this.state.confirmLoading}\n                     destroyOnClose={true}\n                >\n                    <Form {...formItemLayout} >\n                        <Form.Item label={\"定义图标\"} hasFeedback={true}>\n                            {\n                                getFieldDecorator(\"icon\",{\n                                    rules:[{require: true , message: \"iconfont 图片配置不能为空\"}],\n                                    initialValue:currentIconFont && currentIconFont.hasOwnProperty(\"icon\") ? currentIconFont.icon : \"\",\n                                })(\n                                    <Input prefix={iconDiv} placeholder=\"请输入图标值\" onChange={this.iconChange}/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item label={\"定义Key\"} hasFeedback={true}>\n                            {\n                                getFieldDecorator('name' , {\n                                    rules: [{require: true , message: \"iconfont key不能为空\"}], initialValue:currentIconFont && currentIconFont.hasOwnProperty(\"name\") ? currentIconFont.name : \"\",\n                                })(\n                                    <Input  placeholder=\"请输入key值\"/>\n                                )\n                            }\n                        </Form.Item>\n                        {\n                            allThemes.map(function (item) {\n                                var color = currentIconFont && currentIconFont.hasOwnProperty(item) ? currentIconFont[item] : \"\"\n                                return <Form.Item label={item} hasFeedback={true}>\n                                        {\n                                            getFieldDecorator( item , {\n                                                initialValue: color,\n                                                rules: [{required : false}],\n                                            })\n                                            (<Input placeholder=\"请输入颜色值\" />)\n                                        }\n                                </Form.Item>\n                            })\n                        }\n                        <Form.Item label={\"大小\"} hasFeedback={true}>\n                            {\n                                getFieldDecorator('size' , {\n                                    initialValue:currentIconFont && currentIconFont.hasOwnProperty(\"size\")?currentIconFont.size : \"\",\n                                    rules: [{require: false }],\n                                })(<Input placeholder=\"请输入配置大小（暂时未用）\" />)\n                            }\n                        </Form.Item>\n                        <Form.Item label={\"描述\"} hasFeedback={true}>\n                            {\n\n                                getFieldDecorator('description' , {\n                                    initialValue:currentIconFont && currentIconFont.hasOwnProperty(\"description\")?currentIconFont.description : \"\",\n                                    rules: [{require: false }]\n                                })(\n                                    <TextArea rows={3} placeholder=\"请输入该图片描述\"/>\n                                )\n                            }\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </span>\n\n\n        )\n    }\n}\n\nexport default Form.create()(IconFontModal);","\nimport React from 'react';\nimport { Table , Divider , Tag , Button , Mention , Popconfirm  , Menu , Dropdown , Icon , message , Badge} from 'antd';\nimport { withRouter } from \"react-router-dom\";\nimport IconfontModal from './IconFontModal.js';\nimport reqwest from 'reqwest';\nimport IconFontModal from \"./IconFontModal\";\nimport copy from 'copy-to-clipboard';\nimport \"./IconFont.css\";\nimport \"../Public/apiManager.js\"\nimport LinkComponent from \"../Component/LinkComponent.js\"\n\nconst host = window.__config.host;\n\nclass IconFontView extends React.Component {\n\n    state = {\n        allThemes: [],\n        colums: [{\n            title: 'icon',\n            dataIndex: 'icon',\n            key: 'icon',\n            render: text =>(\n                <i className={\"iconfont \"+text}></i>\n            )\n        },{\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a href=\"javascript:;\">{text}</a>,\n        },{\n            title: '描述',\n            dataIndex: 'description',\n            key: 'description',\n        },{\n            title: '大小',\n            dataIndex: 'size',\n            key: 'size',\n        },{\n            title: 'Action',\n            key: 'action',\n            render: (text , record) =>  (\n                <span>\n                    <IconFontModal allThemes={this.state.allThemes} currentIconFont={record} title={\"edit\"} refreshFunction={this.refresh.bind(this)}/>\n                    <Divider type=\"vertical\"/>\n                    <Popconfirm title={\"确定需要删除该条配置信息\"} onConfirm={this.onClickRemove.bind(this , record)} onCancel={ this.onClickRemoveCancel} okText=\"删除\" cancelText=\"取消\">\n                        <a href=\"javascript:;\">remove</a>\n                    </Popconfirm>\n        </span>\n            )\n        }],\n        initLoading : true,\n        loading: false,\n        data: [],\n        list: [],\n\n        mentionLoading: false,\n        suggestions: [],\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.getColums((res) => {\n            var count = []\n            for (var index in res.data) {\n                var value = res.data[index];\n                this.state.allThemes.push(value)\n                var dic = {\n                    title : value ,\n                    dataIndex: value,\n                    key : value ,\n                    render: text =><Tag>{text.toUpperCase()}</Tag>\n                };\n                var newList = this.state.colums.slice(0 , -1);\n                newList.push(dic);\n                newList.push(this.state.colums.slice(-1)[0]);\n                this.state.colums = newList;\n                this.setState({\n                    colums : newList,\n                    list : this.state.list,\n                });\n            }\n\n        });\n        this.refresh();\n    }\n\n    refresh() {\n        console.log(\"refresh\");\n        this.getData((res) => {\n            this.setState({\n                initLoading: false,\n                data: res,\n                list: res.data,\n            });\n        });\n    }\n\n    getColums = (callBack) => {\n        reqwest({\n            url: host + '/api/indexs/getThemes',\n            type: 'json',\n            method: 'get',\n            contentType: 'application/json',\n            success: (res) => {\n                callBack(res);\n            },\n        });\n    }\n\n    getData = (callBack) => {\n        reqwest({\n            url: host + '/api/indexs/getIconFontList',\n            type:'json',\n            method: 'get',\n            contentType: 'application/json',\n            success: (res) => {\n                callBack(res);\n            },\n        });\n    }\n\n    fetchSuggestions = (value , callback) => {\n        setTimeout(() => {\n            reqwest({\n                url: host + '/api/indexs/searchIconFont',\n                type: 'json',\n                method: 'get',\n                contentType: 'application/json',\n                data:{'key' : value},\n                success: (res)=>{\n                    callback(res);\n                },\n            });\n        },500)\n    }\n\n    onSearchChange = (value) => {\n        console.log(value);\n        this.fetchSuggestions(value , (suggestions) => {\n            console.log(suggestions);\n            this.setState({\n                suggestions,\n                loading: false,\n                list : suggestions.data\n            });\n\n        });\n        this.setState({\n            loading: true,\n        });\n    }\n\n    onClickRemove(record , event) {\n\n        reqwest({\n            url: host + '/api/indexs/removeIconFont',\n            type: 'json',\n            method: 'get',\n            contentType: 'application/json',\n            data:{'objectId' : record['objectId']},\n            success: (res)=>{\n                console.log(res);\n                this.refresh();\n            },\n        });\n    }\n    onClickRemoveCancel = (e) => {\n        console.log(e)\n    }\n\n    onClickToClipBoard(item) {\n        reqwest({\n            url: host + '/api/indexs/getAllIconFonts',\n            type: 'json',\n            method: 'get',\n            contentType: 'application/json',\n            data:{'theme' : item},\n            success: (res)=>{\n                copy(JSON.stringify(res));\n                message.info(\"复制剪贴板成功。\")\n            },\n        });\n    }\n\n\n\n    render(){\n        const { initLoading , loading , colums , list , mentionLoading , suggestions} = this.state;\n        // const loadMore = !initLoading && !loading? (\n        //     <div style={{ textAlign: 'center' , marginTop: 12 , height:32 , lineHeight: '32px' ,}}>\n        //         <Button onClick = {this.onLoadMore}> loading more</Button>\n        //     </div>\n        // ) : null;\n        const that = this;\n\n        var menu = (\n            <Menu>\n                {\n                    this.state.allThemes.map(function (item) {\n                        return <Menu.Item onClick={that.onClickToClipBoard.bind(this , item)}>\n                            <a href=\"#\" >{item}</a>\n                        </Menu.Item>\n                        })\n                }\n            </Menu>\n        )\n\n        return (\n            <div>\n                <LinkComponent/>\n                <Mention style={{ width: '90%'}} loading={mentionLoading} suggestions={suggestions} onSearchChange={this.onSearchChange}/>\n                <dic> <IconFontModal allThemes={this.state.allThemes} title={\"Add\"} refreshFunction={this.refresh.bind(this)}/></dic>\n                <Divider type=\"vertical\"/>\n                <Dropdown overlay={menu} ><a href=\"#\">复制至剪贴板<Icon type=\"down\"/></a></Dropdown>\n                <Divider/>\n               <Table Table rowKey = {record => record.objectId} columns={colums} dataSource={list}/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(IconFontView) ;","import React from 'react';\nimport { Upload , message , Button , Icon , Input , Row , Col , Table , Divider , Tag , Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport reqwest from 'reqwest';\n\nconst host = window.__config.host;\n\nconst props = {\n    name: 'file',\n    action: host + '/api/upload',\n\n    header: {\n\n    },\n}\n\n\nclass DevelopView extends React.Component {\n\n    state = {\n        allThemes: [],\n        colums: [{\n            title: 'key',\n            dataIndex: 'key',\n            key: 'key',\n            render: text => ( <a>{text}</a>)\n        }],\n        list: [],\n    }\n\n\n    // constructor (props) {\n    //     super(props);\n    // }\n\n    componentDidMount() {\n        this.getColums()\n    }\n\n    getColums = (e) => {\n        reqwest({\n            url: host + '/api/indexs/getThemes',\n            type: 'json',\n            method: 'get',\n            contentType: 'application/json',\n            success: (res) => {\n                var count = []\n                for (var index in res.data) {\n\n                    var value = res.data[index];\n                    this.state.allThemes.push(value);\n                    var dic = {\n                        title: value,\n                        dataIndex: value,\n                        key: value,\n                        render: text => <Tag>{text.toUpperCase()}</Tag>\n                    };\n                    var newList = this.state.colums;\n                    newList.push(dic);\n                    this.state.colums = newList;\n                    this.setState({\n                        colums: newList,\n                        list: this.state.list,\n                    });\n                };\n            },\n        });\n    }\n\n    //搜索具体的接口\n    requestSearch(value) {\n        setTimeout( () => {\n            reqwest({\n                url: host + '/api/themeIdentifer/searchWithKey',\n                type: 'json',\n                method: 'get',\n                contentType: 'application/json',\n                data: {'key' : JSON.stringify(value)},\n                success: (res)=>{\n                    console.log(res);\n                    this.setState({\n                        loading: false,\n                        list: res.data,\n                    })\n                },\n            });\n        } , 500);\n        this.setState({\n            loading: true,\n        })\n    }\n\n    handleSubmit = e => {\n        this.props.form.validateFields((err , values) => {\n           if (!err) {\n               this.requestSearch(values)\n           }\n        });\n\n    }\n\n\n\n    render() {\n        const { colums , list , allThemes } = this.state;\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span:24 },\n                sm: { span:8 },\n            },\n            wrapperCol: {\n                xs: { span:24 },\n                sm: { span:16 },\n            }\n        };\n\n        var items = (\n            <Form layout=\"inline\">\n                {\n                    allThemes.map(function (item) {\n                        return <Form.Item label={item}>\n                            {\n                                getFieldDecorator(item,{\n                                    rules: [\n                                        {\n                                            require: true,\n                                            message: 'Please input your password!',\n                                        }\n                                    ],\n                                })(<Input />)\n                            }\n                        </Form.Item>\n                    })\n                }\n                <Form.Item>\n                    <Button key=\"search\" type=\"primary\" icon=\"search\" onClick={this.handleSubmit.bind(this)}>\n                        搜索\n                    </Button>\n                </Form.Item>\n                <Form.Item>\n                    <Upload {...props}>\n                        <Button>\n                            <Icon type=\"upload\" /> 上传\n                        </Button>\n                    </Upload>\n                </Form.Item>\n            </Form>\n        );\n\n\n        return (\n            <div>\n                { items }\n                <Divider/>\n                    <Table Table rowKey = {record => record.objectId} columns={colums} dataSource={list} />\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Form.create()(DevelopView));","import React , { Component } from 'react';\nimport './PageComponent.css';\nimport {Route, Switch, withRouter, NavLink, BrowserRouter as Router} from 'react-router-dom'\nimport { Layout , Menu , Icon } from 'antd';\n\nimport IconFontView from '../IconFont/IconFont.js';\nimport DevelopView from '../Tools/Tools'\n\nconst { Header , Content  , Sider , } = Layout;\nconst  SubMenu = Menu.SubMenu;\n\n\nfunction Iconfont() {\n    return (\n        <IconFontView />\n    )\n}\n\nfunction DevelopTool() {\n    return (\n        <DevelopView />\n    )\n}\n\nclass PageComponent extends Component {\n\n\n\n    state = {\n        collapsed: false,\n        number: '1'\n    };\n\n    toggle =() => {\n        this.setState({\n            collapsed : !this.state.collapsed,\n        });\n    }\n\n\n    render() {\n        const LeftSider = withRouter(({history}) => {\n            return (\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                >\n                    <div className=\"logo\" />\n\n                    <Menu theme=\"dark\" selectedKeys={[history.location.pathname]} mode = \"inline\" >\n                        <Menu.Item key=\"/\">\n                            <NavLink to='/'>\n                                <Icon type=\"smile\"/>\n                                <span>IconFont</span>\n                            </NavLink>\n                        </Menu.Item>\n                        <Menu.Item key = \"/developerTool\">\n                            <NavLink to='/developerTool'>\n                                <Icon type=\"skin\"/>\n                                <span>Develop Tools</span>\n                            </NavLink>\n                        </Menu.Item>\n                    </Menu>\n\n                </Sider>\n\n            );\n        } )\n\n        return (\n            <Router >\n            <Layout style={{ minHeight: '100vh' }}>\n                <LeftSider />\n                <Layout>\n                    <Header style={{ background: '#fff' , padding: 0 }}>\n                        <Icon\n                            className=\"trigger\"\n                            type={this.state.collapsed? 'menu-unfold' : 'menu-fold'}\n                            onClick={this.toggle}\n                        />\n                    </Header>\n                    <Content style={{\n                        margin: '24px 16px' , padding: 24 , background: '#fff' , minHeight: 280\n                    }}>\n                            <Switch>\n                                <Route exact path=\"/\" component={Iconfont}/>\n                                <Route path=\"/developerTool\" component={DevelopTool}/>\n                            </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n            </Router>\n        )\n    }\n\n}\n\nexport default PageComponent;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout , Menu , Icon } from 'antd';\n\nimport PageComponent from '../Component/PageComponent.js'\nimport { BrowserRouter as Router, Route,  } from \"react-router-dom\";\n\nclass App extends Component {\n\n\n\n  render() {\n    return (\n        <PageComponent />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}